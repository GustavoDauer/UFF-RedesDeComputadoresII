/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.DecoderController;
import Controller.EncoderController;
import javax.swing.JFileChooser;

/**
 *
 * @author gustavo
 */
public class MainView extends javax.swing.JFrame {

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabbedPane = new javax.swing.JTabbedPane();
        encodingPane = new javax.swing.JPanel();
        inputFileButton = new javax.swing.JButton();
        inputFileTextField = new javax.swing.JTextField();
        outputFileJTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        startEncodingButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainLogView = new javax.swing.JTextArea();
        decodingPane = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        decodeInputFile = new javax.swing.JTextField();
        inputFileButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        decodeOutputFile = new javax.swing.JTextField();
        startDecodingButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mainLogView1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inputFileButton.setText("Selecionar Arquivo");
        inputFileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                inputFileButtonMouseReleased(evt);
            }
        });
        inputFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFileButtonActionPerformed(evt);
            }
        });

        inputFileTextField.setMinimumSize(new java.awt.Dimension(250, 29));
        inputFileTextField.setPreferredSize(new java.awt.Dimension(250, 29));
        inputFileTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFileTextFieldActionPerformed(evt);
            }
        });

        outputFileJTextField.setMinimumSize(new java.awt.Dimension(10, 29));
        outputFileJTextField.setPreferredSize(new java.awt.Dimension(10, 29));
        outputFileJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputFileJTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Entrada");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Saída");

        startEncodingButton.setText("Iniciar Codifição");
        startEncodingButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                startEncodingButtonMouseReleased(evt);
            }
        });
        startEncodingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startEncodingButtonActionPerformed(evt);
            }
        });

        mainLogView.setColumns(20);
        mainLogView.setRows(5);
        jScrollPane1.setViewportView(mainLogView);

        javax.swing.GroupLayout encodingPaneLayout = new javax.swing.GroupLayout(encodingPane);
        encodingPane.setLayout(encodingPaneLayout);
        encodingPaneLayout.setHorizontalGroup(
            encodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encodingPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(encodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(encodingPaneLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(encodingPaneLayout.createSequentialGroup()
                        .addGroup(encodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(8, 8, 8)
                        .addGroup(encodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(outputFileJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputFileTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputFileButton)
                        .addGap(73, 73, 73))
                    .addGroup(encodingPaneLayout.createSequentialGroup()
                        .addComponent(startEncodingButton)
                        .addContainerGap())))
        );
        encodingPaneLayout.setVerticalGroup(
            encodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encodingPaneLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(encodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputFileButton)
                    .addComponent(inputFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(encodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputFileJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(28, 28, 28)
                .addComponent(startEncodingButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainTabbedPane.addTab("Codifição", encodingPane);

        jLabel3.setText("Entrada");

        decodeInputFile.setMinimumSize(new java.awt.Dimension(250, 29));
        decodeInputFile.setPreferredSize(new java.awt.Dimension(250, 29));
        decodeInputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decodeInputFileActionPerformed(evt);
            }
        });

        inputFileButton1.setText("Selecionar Arquivo");
        inputFileButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                inputFileButton1MouseReleased(evt);
            }
        });
        inputFileButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFileButton1ActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Saída");

        decodeOutputFile.setMinimumSize(new java.awt.Dimension(10, 29));
        decodeOutputFile.setPreferredSize(new java.awt.Dimension(10, 29));
        decodeOutputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decodeOutputFileActionPerformed(evt);
            }
        });

        startDecodingButton.setText("Iniciar Decodifição");
        startDecodingButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                startDecodingButtonMouseReleased(evt);
            }
        });
        startDecodingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDecodingButtonActionPerformed(evt);
            }
        });

        mainLogView1.setColumns(20);
        mainLogView1.setRows(5);
        jScrollPane2.setViewportView(mainLogView1);

        javax.swing.GroupLayout decodingPaneLayout = new javax.swing.GroupLayout(decodingPane);
        decodingPane.setLayout(decodingPaneLayout);
        decodingPaneLayout.setHorizontalGroup(
            decodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decodingPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(decodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(decodingPaneLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(decodingPaneLayout.createSequentialGroup()
                        .addGroup(decodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(8, 8, 8)
                        .addGroup(decodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(decodeOutputFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(decodeInputFile, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputFileButton1)
                        .addGap(73, 73, 73))
                    .addGroup(decodingPaneLayout.createSequentialGroup()
                        .addComponent(startDecodingButton)
                        .addContainerGap())))
        );
        decodingPaneLayout.setVerticalGroup(
            decodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decodingPaneLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(decodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputFileButton1)
                    .addComponent(decodeInputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(decodingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decodeOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(28, 28, 28)
                .addComponent(startDecodingButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainTabbedPane.addTab("Decodificação", decodingPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFileButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFileButtonActionPerformed

    private void inputFileTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFileTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFileTextFieldActionPerformed

    private void inputFileButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputFileButtonMouseReleased
        // TODO add your handling code here:
        JFileChooser jfileChooser = new JFileChooser();
        jfileChooser.showOpenDialog(this);
        if(jfileChooser.getSelectedFile() != null) {
            inputFileTextField.setText(jfileChooser.getSelectedFile().getAbsolutePath());
            outputFileJTextField.setText(inputFileTextField.getText().concat("-output"));
        }
    }//GEN-LAST:event_inputFileButtonMouseReleased

    private void outputFileJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputFileJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputFileJTextFieldActionPerformed

    private void startEncodingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startEncodingButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startEncodingButtonActionPerformed

    private void startEncodingButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startEncodingButtonMouseReleased
        // TODO add your handling code here:
        EncoderController encoderController = new EncoderController(mainLogView, inputFileTextField.getText(), outputFileJTextField.getText());
        encoderController.encode();
    }//GEN-LAST:event_startEncodingButtonMouseReleased

    private void decodeInputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decodeInputFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_decodeInputFileActionPerformed

    private void inputFileButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputFileButton1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFileButton1MouseReleased

    private void inputFileButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFileButton1ActionPerformed
        
        JFileChooser jfileChooser = new JFileChooser();
        jfileChooser.showOpenDialog(this);
        if(jfileChooser.getSelectedFile() != null) {
            decodeInputFile.setText(jfileChooser.getSelectedFile().getAbsolutePath());
            decodeOutputFile.setText(decodeInputFile.getText().concat("-output"));
        }
        
        
    }//GEN-LAST:event_inputFileButton1ActionPerformed

    private void decodeOutputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decodeOutputFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_decodeOutputFileActionPerformed

    private void startDecodingButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startDecodingButtonMouseReleased
        // TODO add your handling code here:
        DecoderController decoderController = new DecoderController(mainLogView1, decodeInputFile.getText(), decodeOutputFile.getText());
        decoderController.decode();
    }//GEN-LAST:event_startDecodingButtonMouseReleased

    private void startDecodingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDecodingButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startDecodingButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainView mainView = new MainView();
                mainView.setExtendedState(MAXIMIZED_BOTH);
                mainView.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField decodeInputFile;
    private javax.swing.JTextField decodeOutputFile;
    private javax.swing.JPanel decodingPane;
    private javax.swing.JPanel encodingPane;
    private javax.swing.JButton inputFileButton;
    private javax.swing.JButton inputFileButton1;
    private javax.swing.JTextField inputFileTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea mainLogView;
    private javax.swing.JTextArea mainLogView1;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JTextField outputFileJTextField;
    private javax.swing.JButton startDecodingButton;
    private javax.swing.JButton startEncodingButton;
    // End of variables declaration//GEN-END:variables
}
